node n1 {
    type router
    model PC
    network-config {
	hostname n1Client
	!
	interface eth0
	 ipv6 address 2001:db8::20/64
	!
    }
    canvas c1
    iconcoords {82.0 100.0}
    labelcoords {82.0 75.0}
    interface-peer {eth0 n2}
    services {DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 2001:db8::10
	
	}
    }
}

node n2 {
    type router
    model host
    network-config {
	hostname n2Proxy
	!
	interface eth1
	 ip address 192.0.2.10/24
	 ipv6 address 2001:db8:6::2/126
	!
	interface eth0
	 ipv6 address 2001:db8::10/64
	!
    }
    canvas c1
    iconcoords {82.0 209.0}
    labelcoords {77.0 258.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n5}
    services {IPForward DefaultRoute UserDefined}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/log/squid3', '/var/spool/squid3', '/etc/squid3', '/run', )
	files=('/etc/squid3/squid.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/etc/squid3/squid.conf
	custom-command /etc/squid3/squid.conf
	config {
	acl manager proto cache_object
	acl localhost src 127.0.0.1/32 ::1
	acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1
	acl localnet src 2001:db8::/64
	acl SSL_ports port 443
	acl Safe_ports port 80       		# http
	acl Safe_ports port 21       		# ftp
	acl Safe_ports port 443	      	# https
	acl Safe_ports port 70       		# gopher
	acl Safe_ports port 210      		# wais
	acl Safe_ports port 1025-65535	# unregistered ports
	acl Safe_ports port 280      		# http-mgmt
	acl Safe_ports port 488      		# gss-http
	acl Safe_ports port 591      		# filemaker
	acl Safe_ports port 777      		# multiling http
	acl CONNECT method CONNECT
	http_access allow manager localhost
	http_access deny manager
	http_access deny !Safe_ports
	http_access deny CONNECT !SSL_ports
	http_access allow localnet
	http_access allow localhost
	http_access deny all
	icp_access deny all
	htcp_access deny all
	http_port 3128
	hierarchy_stoplist cgi-bin ?
	access_log /var/log/squid3/access.log squid
	refresh_pattern ^ftp:		1440	20%	10080
	refresh_pattern ^gopher:	1440	0%	1440
	refresh_pattern (cgi-bin|\?)	0	0%	0
	refresh_pattern .		0	20%	4320
	icp_port 3130
	coredump_dir /var/spool/squid3
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.0.2.1
	ip route add default via 2001:db8:6::1
	
	}
    }
}

node n3 {
    type router
    model host
    network-config {
	hostname n3Hostv4
	!
	interface eth0
	 ip address 198.51.100.10/24
	!
    }
    canvas c1
    iconcoords {606.0 207.0}
    labelcoords {606.0 240.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/log/apache2', '/run/lock', )
	cmdup=('/etc/init.d/apache2 start', )
	cmddown=('/etc/init.d/apache2 stop', )
	}
    }
    services {DefaultRoute UserDefined}
}

node n4 {
    type router
    model host
    network-config {
	hostname n4Hostv6
	!
	interface eth0
	 ipv6 address 2001:db8:abc::10/64
	!
    }
    canvas c1
    iconcoords {357.0 323.0}
    labelcoords {356.0 355.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/log/apache2', '/run/lock', )
	cmdup=('/etc/init.d/apache2 start', )
	cmddown=('/etc/init.d/apache2 stop', )
	}
    }
    services {DefaultRoute UserDefined}
}

node n5 {
    type router
    model router
    network-config {
	hostname n5Router
	!
	interface eth3
	 ipv6 address 2001:db8:abc::1/64
	!
	interface eth1
	 ip address 192.0.2.1/24
	 ipv6 address 2001:db8:6::1/126
	!
	interface eth2
	 ip address 198.51.100.1/24
	!
    }
    canvas c1
    iconcoords {357.0 208.0}
    labelcoords {356.0 167.0}
    interface-peer {eth1 n2}
    interface-peer {eth2 n3}
    interface-peer {eth3 n4}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.0.2.1
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:2::1
	#/sbin/ip route add 10.9.8.0/24 via 203.0.113.1
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:4::1
	/sbin/ip route add 2001:db8::/64 via 2001:db8:6::2
	/sbin/ip route add 203.0.113.0/24 via 192.0.2.10
	}
    }
}

link l2 {
    nodes {n1 n2}
    bandwidth 0
}

link l3 {
    nodes {n2 n5}
    bandwidth 0
}

link l4 {
    nodes {n5 n3}
    bandwidth 0
}

link l5 {
    nodes {n5 n4}
    bandwidth 0
}

annotation a1 {
    iconcoords {222 110 649 375}
    type rectangle
    label {Internet}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

annotation a2 {
    iconcoords {476 153 643 252}
    type rectangle
    label {IPv4}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #6ce0ff
    width 0
    border black
    rad 25
    canvas c1
}

annotation a3 {
    iconcoords {230 247 428 366}
    type rectangle
    label {IPv6}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ffc0d4
    width 0
    border black
    rad 25
    canvas c1
}

annotation a4 {
    iconcoords {3 31 221 260}
    type rectangle
    label {LAN}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #19FFFF
    width 0
    border black
    rad 25
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid no
    traffic_start 0
}

option session {
}

