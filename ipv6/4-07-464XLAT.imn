node n1 {
    type router
    model router
    network-config {
	hostname n1PLAT
	!
	interface eth0
	 ipv6 address 2001:db8:ca00:1::1/64
	!
	interface eth1
	 ipv6 address 2001:db8:ca00:2::1/64
	!
	interface eth2
	 ip address 203.0.113.2/24
	!
    }
    canvas c1
    iconcoords {346.0 153.0}
    labelcoords {346.0 135.0}
    interface-peer {eth1 n5}
    interface-peer {eth2 n4}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('init-tayga64.sh', 'tayga64.conf', )
	cmdup=('chmod +x init-tayga64.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:tayga64.conf
	custom-command tayga64.conf
	config {
	# nome do tunel, nat64 recomendado, mas nao obrigatorio
	tun-device nat64
	
	# endereco IPv4 do Tayga. Diferente do IPv4 do roteador
	ipv4-addr 192.168.255.1
	
	# endereco IPv6 do Tayga. Neste exemplo nao precisa pois usamos um
	# prefixo IPv6. Em outras circunstancias pode ser necessario, olhe a
	# documentacao para detalhes.
	#
	#ipv6-addr 2001:db8:1::1
	
	# Prefixo NAT64. E recomendada a utilizacao de um /96.
	prefix 2001:db8:ca00:bbbb::/96
	
	# Pool IPv4 dinamico. Utilizado para mapear um IPv6 para IPv4 para
	# poder fazer o NAT64 (PLAT). Nao utilizado no NAT46 (CLAT).
	dynamic-pool 192.168.255.0/24
	
	# Pasta onde e' criado o arquivo dynamic.map, que armazena
	# as associacoes estaticas entre IPv4 e IPv6
	data-dir /tmp
	
	# Mapeamentos estaticos. E necessaria uma regra para cada IPv4 privado
	# conectado ao CLAT.
	# Exemplo:
	# map IPv4 IPv6(Prefixo::IPv4-escrito-em-hexa)
	# map
	}
    }
    custom-config {
	custom-config-id service:UserDefined:init-tayga64.sh
	custom-command init-tayga64.sh
	config {
	#!/bin/bash
	
	case "$1" in
	
	  start)
	
	tayga --mktun
	ip link set nat64 up
	ip route add 192.168.255.0/24 dev nat64
	ip -6 route add 2001:db8:ca00:bbbb::/96 dev nat64
	iptables -t nat -A POSTROUTING -o eth2 -j MASQUERADE
	iptables -A FORWARD -i eth2 -o nat64 -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -A FORWARD -i nat64 -o eth2 -j ACCEPT
	echo 1 > /proc/sys/net/ipv4/conf/all/forwarding
	echo 1 > /proc/sys/net/ipv6/conf/all/forwarding
	#inicializacao com debug
	tayga -d -c tayga64.conf
	      ;;
	
	  stop)
	
	ip route del 192.168.255.0/24 dev nat64
	ip -6 route del 2001:db8:ca00:bbbb::/96 dev nat64
	ip link set nat64 down
	ip link del nat64
	iptables -t nat -D POSTROUTING -o eth2 -j MASQUERADE
	iptables -D FORWARD -i eth2 -o nat64 -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -D FORWARD -i nat64 -o eth2 -j ACCEPT
	echo 0 > /proc/sys/net/ipv4/conf/all/forwarding
	echo 0 > /proc/sys/net/ipv6/conf/all/forwarding
	      ;;
	
	esac
	exit 0
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	
	ip route add 198.51.100.0/24 via 203.0.113.1
	ip route add 2001:db8:ca00:3::/64 via 2001:db8:ca00:2::2
	ip route add 2001:db8:ca00:4::/64 via 2001:db8:ca00:2::2
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	
	('staticroute.sh', )
	80
	('sh staticroute.sh', )
	
	
	
	}
    }
    services {IPForward StaticRoute UserDefined}
    interface-peer {eth0 n2}
}

node n4 {
    type router
    model router
    network-config {
	hostname n2Router
	!
	interface eth1
	 ip address 198.51.100.1/24
	!
	interface eth0
	 ip address 203.0.113.1/24
	!
    }
    canvas c1
    iconcoords {592.0 153.0}
    labelcoords {588.0 127.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n7}
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	
	('staticroute.sh', )
	80
	('sh staticroute.sh', )
	
	
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 203.0.113.2
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {IPForward DefaultRoute}
}

node n5 {
    type router
    model router
    network-config {
	hostname n5Router
	!
	interface eth1
	 ipv6 address 2001:db8:ca00:3::2/64
	!
	interface eth0
	 ipv6 address 2001:db8:ca00:2::2/64
	!
    }
    canvas c1
    iconcoords {244.0 232.0}
    labelcoords {184.0 238.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:ca00:2::1
	ip route add 2001:db8:ca00:1::/64 via 2001:db8:ca00:2::1
	ip route add 2001:db8:ca00:4::/64 via 2001:db8:ca00:3::1
	ip route add 2001:db8:ca00:aaaa::/96 via 2001:db8:ca00:3::1
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	
	('staticroute.sh', )
	80
	('sh staticroute.sh', )
	
	
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 2001:db8:ca00:2::1
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {IPForward DefaultRoute StaticRoute}
    interface-peer {eth1 n3}
}

node n7 {
    type router
    model host
    network-config {
	hostname n3Host
	!
	interface eth0
	 ip address 198.51.100.10/24
	!
    }
    canvas c1
    iconcoords {593.0 436.0}
    labelcoords {589.0 475.0}
    interface-peer {eth0 n4}
    services {DefaultRoute}
}

node n2 {
    type router
    model PC
    network-config {
	hostname n4Client
	!
	interface eth0
	 ipv6 address 2001:db8:ca00:1::10/64
	!
    }
    canvas c1
    iconcoords {170.0 94.0}
    labelcoords {172.0 134.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 2001:db8:ca00:1::1
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {DefaultRoute}
}

node n3 {
    type router
    model router
    network-config {
	hostname n6CLAT
	!
	interface eth1
	 ip address 192.168.1.1/24
	 ipv6 address 2001:db8:ca00:4::1/64
	!
	interface eth0
	 ipv6 address 2001:db8:ca00:3::1/64
	!
    }
    canvas c1
    iconcoords {244.0 344.0}
    labelcoords {192.0 374.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 2001:db8:ca00:3::2
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:ca00:3::1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.1.1
	ip route add 2001:db8:ca00:1::/64 via 2001:db8:ca00:3::2
	ip route add 2001:db8:ca00:2::/64 via 2001:db8:ca00:3::2
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	
	('staticroute.sh', )
	80
	('sh staticroute.sh', )
	
	
	
	}
    }
    services {IPForward DefaultRoute StaticRoute UserDefined}
}

node n6 {
    type router
    model PC
    network-config {
	hostname n7Client
	!
	interface eth0
	 ip address 192.168.1.10/24
	 ipv6 address 2001:db8:ca00:4::10/64
	!
    }
    canvas c1
    iconcoords {243.0 460.0}
    labelcoords {295.0 471.0}
    interface-peer {eth0 n3}
}

link l2 {
    nodes {n1 n5}
    bandwidth 0
}

link l5 {
    nodes {n1 n4}
    bandwidth 0
}

link l6 {
    nodes {n4 n7}
    bandwidth 0
}

link l1 {
    nodes {n2 n1}
    bandwidth 0
}

link l3 {
    nodes {n5 n3}
    bandwidth 0
}

link l4 {
    nodes {n3 n6}
    bandwidth 0
}

annotation a5 {
    type text
    iconcoords {210.0 126.0}
    label {}
    canvas c1
}

annotation a7 {
    type text
    iconcoords {549.0 58.0}
    label {}
    canvas c1
}

annotation a9 {
    type text
    iconcoords {804.0 55.0}
    label {}
    canvas c1
}

annotation a1 {
    iconcoords {366.0 42.0 660.0 492.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

annotation a3 {
    iconcoords {78.0 186.0 78.0 186.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ffc0d4
    width 0
    border black
    rad 25
    canvas c1
}

annotation a2 {
    iconcoords {379 363 649 482}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #6ce0ff
    width 0
    border black
    rad 25
    canvas c1
}

annotation a4 {
    iconcoords {195.0 65.0}
    type text
    label {ISP 464XLAT}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a6 {
    type text
    iconcoords {292.0 65.0}
    label {}
    canvas c1
}

annotation a8 {
    iconcoords {469.0 64.0}
    type text
    label {INTERNET}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a10 {
    iconcoords {387.0 399.0}
    type text
    label {LAN IPv4 Only}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a11 {
    iconcoords {121 36 365 491}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #11d046
    width 0
    border black
    rad 25
    canvas c1
}

annotation a12 {
    iconcoords {134.0 328.0 358.0 487.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #fba030
    width 0
    border black
    rad 25
    canvas c1
}

annotation a13 {
    iconcoords {144.0 345.0}
    type text
    label {LAN}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a14 {
    type text
    iconcoords {254.0 393.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid no
    traffic_start 0
}

option session {
}

